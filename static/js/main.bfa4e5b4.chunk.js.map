{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SUBTRACT","MULTIPLY","DIVIDE","NUMBER_INPUT","CLEAR_INPUT","OPERATOR_INPUT","DECIMAL_INPUT","ZERO_INPUT","EQUALS","initialState","result","input","equalsed","store","createStore","state","action","type","console","log","value","concat","operator","slice","test","evaluate","toString","window","__REDUX_DEVTOOLS_EXTENSION__","App","props","getState","subscribeListener","setState","subscribe","className","resultDisplayContent","this","inputDisplayContent","React","Component","Display","id","ButtonContainer","ClearButton","dispatch","Button","color","onClick","handleClick","OperatorButtons","operatorArr","op","event","target","innerText","map","ele","Math","floor","random","EqualsButton","MyTests","document","getElementById","click","NumberButtons","numberArr","valueIn","handleClickNumber","handleClickZero","handleClickDecimal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bfa4e5b4.chunk.js","sourcesContent":["import './App.css';\nimport { Provider } from 'react-redux';\nimport React from \"react\";\nimport {createStore} from 'redux';\nimport { Button } from \"reactstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { evaluate } from 'mathjs';\n\n\nconst INCREMENT = 'INCREMENT';\nconst DECREMENT = 'DECREMENT';\n\nconst ADD = 'ADD';\nconst SUBTRACT = 'SUBTRACT';\nconst MULTIPLY = 'MULTIPLY';\nconst DIVIDE = 'DIVIDE';\nconst NUMBER_INPUT = 'NUMBER_INPUT';\nconst CLEAR_INPUT = 'CLEAR_INPUT';\nconst OPERATOR_INPUT = 'OPERATOR_INPUT';\nconst DECIMAL_INPUT = 'DECIMAL_INPUT';\nconst ZERO_INPUT = 'ZERO_INPUT';\nconst EQUALS = 'EQUALS';\n\nconst numberInputAction = (valueIn) => {\n    return {\n        type: NUMBER_INPUT,\n        value: valueIn\n    }\n};\n\nconst clearInputAction = () => {\n    console.log('clear clicked');\n    return {\n        type: CLEAR_INPUT\n    }\n};\n\nconst operatorAction = (op) => {\n    return {\n        type: OPERATOR_INPUT,\n        operator: op\n    }\n};\n\nconst decimalAction = () => {\n    return {\n        type: DECIMAL_INPUT\n    }\n};\n\nconst zeroAction = () => {\n    return {\n        type: ZERO_INPUT\n    }\n};\n\nconst equalAction = () => {\n    return {\n        type: EQUALS\n    }\n}\n\nconst initialState = {\n    result: '0',\n    input: '0',\n    equalsed: false\n};\n\nconst store = createStore(\n    reducer,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\n\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case NUMBER_INPUT:\n            console.log('number clicked:', action.value);\n            if (state.equalsed) {\n                return {\n                    ...state,\n                    equalsed: false,\n                    input: '0',\n                    result: action.value\n                }\n            } else {\n                if (state.result === '0') {\n                    return {\n                        ...state,\n                        result: action.value\n                    }\n                } else {\n                    return {\n                        ...state,\n                        result: state.result.concat(action.value)\n                    }\n                }\n            }\n        case CLEAR_INPUT:\n            return {\n                ...state,\n                input: '0',\n                result: '0'\n            }\n        case OPERATOR_INPUT:\n            if (state.equalsed) {\n                return {\n                    ...state,\n                    input: state.result.concat(action.operator),\n                    result: '0',\n                    equalsed: false,\n                }\n            } else {\n                console.log(state.input.slice(-1), /[+*/]/.test(state.input.slice(-1)));\n                if (action.operator === '-') {\n                    if (state.result === '0') {\n                        return {\n                            ...state,\n                            result: '-'\n                        }\n                    }\n                }\n                if (/[+*/]/.test(state.input.slice(-1)) && state.result === '0'){\n                    return {\n                        ...state,\n                        input: state.input.slice(0,-1).concat(action.operator)\n                    }\n                }\n                if (state.input === '0') {\n                    return {\n                        ...state,\n                        input: state.result.concat(action.operator),\n                        result: '0'\n                    }\n                } else {\n                    return {\n                        ...state,\n                        input: state.input.concat(state.result.concat(action.operator)),\n                        result: '0'\n                    }\n                }\n            }\n\n        case DECIMAL_INPUT:\n            if (!/\\./.test(state.result)) {\n                return {\n                    ...state,\n                    result: state.result.concat('.')\n                }\n            } else {\n                return {\n                    ...state\n                }\n            }\n            break;\n        case ZERO_INPUT:\n            if (state.result === '0') {\n                return {\n                    ...state\n                }\n            } else {\n                return {\n                    ...state,\n                    result: state.result.concat('0')\n                }\n            }\n        case EQUALS:\n            if (!state.equalsed){\n                return {\n                    ...state,\n                    result: evaluate(state.input.concat(state.result)).toString(),\n                    input: state.input.concat(state.result),\n                    equalsed: true\n                }\n            } else {\n                return state\n            }\n            break;\n\n        default:\n            return state;\n    }\n\n}\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: store.getState().result,\n            input: store.getState().input\n        }\n\n        this.subscribeListener = () => {\n            this.setState({\n                result: store.getState().result,\n                input: store.getState().input\n            })\n        }\n\n        store.subscribe(this.subscribeListener)\n\n\n    }\n\n    render() {\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n              <header className=\"App-header\">\n                  <div className='calculator'>\n                      <Display\n                        resultDisplayContent={this.state.result}\n                        inputDisplayContent={this.state.input}\n                      />\n                      {/*<CountButtons/>*/}\n                      <ButtonContainer/>\n                  </div>\n              </header>\n            </div>\n        </Provider>\n    );\n  }\n}\n\nclass Display extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div className='display-wrapper'>\n                <div className='input-display-wrapper'>\n                    <code id='input-display'>{this.props.inputDisplayContent}</code>\n                </div>\n                <div className='result-display-wrapper'>\n                    <code id=\"display\">{this.props.resultDisplayContent}</code>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass ButtonContainer extends React.Component {\n    render() {\n        return (\n            <div className='all-buttons'>\n                <ClearButton/>\n                <NumberButtons/>\n                <OperatorButtons/>\n                <EqualsButton/>\n                <MyTests/>\n            </div>\n        );\n    }\n}\n\nclass ClearButton extends React.Component {\n\n    handleClick() {\n        store.dispatch(clearInputAction())\n    }\n\n    render() {\n        return (\n            <div className='clear-button-container'>\n                <Button\n                    id='clear'\n                    color='danger'\n                    className='clear-button'\n                    onClick={this.handleClick}\n                >AC</Button>\n            </div>\n        );\n    }\n}\n\nclass OperatorButtons extends React.Component {\n\n    operatorArr = [\n        {op: '+', action: ADD, id: 'add'},\n        {op: '-', action: SUBTRACT, id: 'subtract'},\n        {op: '/', action: DIVIDE, id: 'divide'},\n        {op: '*', action: MULTIPLY, id: 'multiply'}\n    ]\n\n    handleClick(event) {\n        store.dispatch(operatorAction(event.target.innerText))\n    }\n\n    render() {\n        return (\n            <div className='operator-button-container'>\n                {this.operatorArr.map(ele => {\n                    return (\n                        <Button\n                            key={Math.floor(Math.random()*100000)}\n                            className='operator-button'\n                            color='danger'\n                            id={ele.id}\n                            onClick={this.handleClick}\n                        >{ele.op}</Button>\n                    )\n                })}\n\n            </div>\n        );\n    }\n}\n\nclass EqualsButton extends React.Component {\n\n    handleClick() {\n        store.dispatch(equalAction())\n    }\n\n    render() {\n        return (\n            <div className='equals-button-container'>\n                <Button\n                    id='equals'\n                    className='equals-button'\n                    color='warning'\n                    onClick={this.handleClick}\n                >=</Button>\n            </div>\n        );\n    }\n}\n\nclass MyTests extends React.Component {\n    handleClick() {\n        document.getElementById('one').click();\n        document.getElementById('two').click();\n        document.getElementById('three').click();\n        console.log('test complete:', document.getElementById('display').innerText)\n    }\n\n    render() {\n        return (\n            <div className='test-div'>\n                <Button\n                    onClick={this.handleClick}\n                >Test</Button>\n            </div>\n        );\n    }\n}\n\n\nclass NumberButtons extends React.Component {\n    numberArr = [\n        {value:7, id:\"seven\"},\n        {value:8, id:\"eight\"},\n        {value:9, id:\"nine\"},\n        {value:4, id:\"four\"},\n        {value:5, id:\"five\"},\n        {value:6, id:\"six\"},\n        {value:1, id:\"one\"},\n        {value:2, id:\"two\"},\n        {value:3, id:\"three\"}\n        ];\n\n    handleClickNumber(event) {\n        store.dispatch(numberInputAction(event.target.innerText))\n    }\n\n    handleClickDecimal() {\n        store.dispatch(decimalAction())\n    }\n\n    handleClickZero() {\n        store.dispatch(zeroAction())\n    }\n\n    render() {\n        return (\n            <div className='number-button-container'>\n                {this.numberArr.map(ele => {\n                    return (\n                        <Button\n                            key={Math.floor(Math.random()*100000)}\n                            className='number-button'\n                            color='primary'\n                            id={ele.id}\n                            onClick={this.handleClickNumber}\n                        >{ele.value}</Button>\n                    )\n                })}\n                <div className='zero-button-container'>\n                    <Button\n                        color='primary'\n                        className='zero-button'\n                        id='zero'\n                        onClick={this.handleClickZero}\n                    >0</Button>\n                </div>\n                <Button\n                    color='primary'\n                    className='dec-button'\n                    id='decimal'\n                    onClick={this.handleClickDecimal}\n                >.</Button>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}